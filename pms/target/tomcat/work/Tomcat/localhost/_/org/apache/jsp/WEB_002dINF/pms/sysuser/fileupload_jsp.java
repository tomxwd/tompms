/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2019-02-26 13:09:43 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.pms.sysuser;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class fileupload_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\n');
      out.write('\n');
      if (_jspx_meth_c_005fset_005f0(_jspx_page_context))
        return;
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("\n");
      out.write("<head>\n");
      out.write("\n");
      out.write("<meta charset=\"utf-8\">\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n");
      out.write("\n");
      out.write("\n");
      out.write("<link href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/css/plugins/jqgrid/ui.jqgrid.css?0820\"\n");
      out.write("\trel=\"stylesheet\">\n");
      out.write("<link href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/css/bootstrap.min.css?v=3.3.6\" rel=\"stylesheet\">\n");
      out.write("<link href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/css/font-awesome.css?v=4.4.0\" rel=\"stylesheet\">\n");
      out.write("<!-- webupload -->\n");
      out.write("<link href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/css/plugins/webuploader/webuploader.css\"\n");
      out.write("\trel=\"stylesheet\">\n");
      out.write("\n");
      out.write("\n");
      out.write("<!-- 全局js -->\n");
      out.write("<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/js/jquery.min.js?v=2.1.4\"></script>\n");
      out.write("<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/js/bootstrap.min.js?v=3.3.6\"></script>\n");
      out.write("<!-- webupload -->\n");
      out.write("<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/js/plugins/webuploader/webuploader.min.js\"></script>\n");
      out.write("\n");
      out.write("<title>fileupload文件上传组件测试</title>\n");
      out.write("\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("\n");
      out.write("\t<h1>webupload文件上传组件</h1>\n");
      out.write("\t<div id=\"uploader\" class=\"wu-example\">\n");
      out.write("\t\t<!--用来存放文件信息-->\n");
      out.write("\t\t<div id=\"thelist\" class=\"uploader-list\"></div>\n");
      out.write("\t\t<div class=\"btns\">\n");
      out.write("\t\t\t<div id=\"picker\">选择文件</div>\n");
      out.write("\t\t\t<button id=\"ctlBtn\" class=\"btn btn-default\">开始上传</button>\n");
      out.write("\t\t</div>\n");
      out.write("\t</div>\n");
      out.write("\t<script type=\"text/javascript\">\n");
      out.write("\t\tjQuery(function() {\n");
      out.write("\t\t\tvar $ = jQuery, $list = $('#thelist'), $btn = $('#ctlBtn'), state = 'pending', uploader;\n");
      out.write("\n");
      out.write("\t\t\t//初始化\n");
      out.write("\t\t\tuploader = WebUploader.create({\n");
      out.write("\n");
      out.write("\t\t\t\t// 不压缩image\n");
      out.write("\t\t\t\tresize : false,\n");
      out.write("\n");
      out.write("\t\t\t\t// swf文件路径  flash动画的时候引入的文件\n");
      out.write("\t\t\t\t/*   swf: BASE_URL + '/js/Uploader.swf', */\n");
      out.write("\n");
      out.write("\t\t\t\t// 文件接收服务端。\n");
      out.write("\t\t\t\tserver : \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/sysuser/fileUpLoadTest\",\n");
      out.write("\n");
      out.write("\t\t\t\t// 选择文件的按钮。可选。\n");
      out.write("\t\t\t\t// 内部根据当前运行是创建，可能是input元素，也可能是flash.\n");
      out.write("\t\t\t\tpick : '#picker'\n");
      out.write("\t\t\t});\n");
      out.write("\n");
      out.write("\t\t\t// 当有文件添加进来的时候\n");
      out.write("\t\t\tuploader.on('fileQueued', function(file) {\n");
      out.write("\t\t\t\t$list.append('<div id=\"' + file.id + '\" class=\"item\">'\n");
      out.write("\t\t\t\t\t\t+ '<h4 class=\"info\">' + file.name + '</h4>'\n");
      out.write("\t\t\t\t\t\t+ '<p class=\"state\">等待上传...</p>' + '</div>');\n");
      out.write("\t\t\t});\n");
      out.write("\n");
      out.write("\t\t\t// 文件上传过程中创建进度条实时显示。\n");
      out.write("\t\t\tuploader\n");
      out.write("\t\t\t\t\t.on(\n");
      out.write("\t\t\t\t\t\t\t'uploadProgress',\n");
      out.write("\t\t\t\t\t\t\tfunction(file, percentage) {\n");
      out.write("\t\t\t\t\t\t\t\tvar $li = $('#' + file.id), $percent = $li\n");
      out.write("\t\t\t\t\t\t\t\t\t\t.find('.progress .progress-bar');\n");
      out.write("\n");
      out.write("\t\t\t\t\t\t\t\t// 避免重复创建\n");
      out.write("\t\t\t\t\t\t\t\tif (!$percent.length) {\n");
      out.write("\t\t\t\t\t\t\t\t\t$percent = $(\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t'<div class=\"progress progress-striped active\">'\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t+ '<div class=\"progress-bar\" role=\"progressbar\" style=\"width: 0%\">'\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t+ '</div>' + '</div>')\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t.appendTo($li)\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t.find('.progress-bar');\n");
      out.write("\t\t\t\t\t\t\t\t}\n");
      out.write("\n");
      out.write("\t\t\t\t\t\t\t\t$li.find('p.state').text('上传中');\n");
      out.write("\n");
      out.write("\t\t\t\t\t\t\t\t$percent.css('width', percentage * 100 + '%');\n");
      out.write("\t\t\t\t\t\t\t});\n");
      out.write("\n");
      out.write("\t\t\tuploader.on('uploadSuccess', function(file) {\n");
      out.write("\t\t\t\t$('#' + file.id).find('p.state').text('已上传');\n");
      out.write("\t\t\t});\n");
      out.write("\n");
      out.write("\t\t\tuploader.on('uploadError', function(file) {\n");
      out.write("\t\t\t\t$('#' + file.id).find('p.state').text('上传出错');\n");
      out.write("\t\t\t});\n");
      out.write("\n");
      out.write("\t\t\tuploader.on('uploadComplete', function(file) {\n");
      out.write("\t\t\t\t$('#' + file.id).find('.progress').fadeOut();\n");
      out.write("\t\t\t});\n");
      out.write("\n");
      out.write("\t\t\tuploader.on('all', function(type) {\n");
      out.write("\t\t\t\tif (type === 'startUpload') {\n");
      out.write("\t\t\t\t\tstate = 'uploading';\n");
      out.write("\t\t\t\t} else if (type === 'stopUpload') {\n");
      out.write("\t\t\t\t\tstate = 'paused';\n");
      out.write("\t\t\t\t} else if (type === 'uploadFinished') {\n");
      out.write("\t\t\t\t\tstate = 'done';\n");
      out.write("\t\t\t\t}\n");
      out.write("\n");
      out.write("\t\t\t\tif (state === 'uploading') {\n");
      out.write("\t\t\t\t\t$btn.text('暂停上传');\n");
      out.write("\t\t\t\t} else {\n");
      out.write("\t\t\t\t\t$btn.text('开始上传');\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t});\n");
      out.write("\n");
      out.write("\t\t\t$btn.on('click', function() {\n");
      out.write("\t\t\t\tif (state === 'uploading') {\n");
      out.write("\t\t\t\t\tuploader.stop();\n");
      out.write("\t\t\t\t} else {\n");
      out.write("\t\t\t\t\tuploader.upload();\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t});\n");
      out.write("\t\t});\n");
      out.write("\t</script>\n");
      out.write("\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fset_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:set
    org.apache.taglibs.standard.tag.rt.core.SetTag _jspx_th_c_005fset_005f0 = (org.apache.taglibs.standard.tag.rt.core.SetTag) _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.SetTag.class);
    _jspx_th_c_005fset_005f0.setPageContext(_jspx_page_context);
    _jspx_th_c_005fset_005f0.setParent(null);
    // /WEB-INF/pms/sysuser/fileupload.jsp(4,0) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fset_005f0.setVar("ctx");
    // /WEB-INF/pms/sysuser/fileupload.jsp(4,0) name = value type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
    _jspx_th_c_005fset_005f0.setValue(new org.apache.jasper.el.JspValueExpression("/WEB-INF/pms/sysuser/fileupload.jsp(4,0) '${pageContext.request.contextPath}'",_el_expressionfactory.createValueExpression(_jspx_page_context.getELContext(),"${pageContext.request.contextPath}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
    int _jspx_eval_c_005fset_005f0 = _jspx_th_c_005fset_005f0.doStartTag();
    if (_jspx_th_c_005fset_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.reuse(_jspx_th_c_005fset_005f0);
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.reuse(_jspx_th_c_005fset_005f0);
    return false;
  }
}
